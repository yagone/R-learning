笔记第三章对应书的第四章，介绍一些数据管理方面的基本方法
1.创建一个新的变量
赋值符号<-
transform()函数可以将新数据加入原有的数据，例如
mydata <- transform(mydata, sumx=x1+x2, meanx=(x1+x2)/2) 将加总和均值增加到mydata数据框中

2.运算符
算术运算符：除了加减乘除和求幂以外，还有x%%y的求余，例如2%%5=1，x%/%y表示整数除法，例如5%/%2=2
逻辑运算符：用<>表示大于和小于，用<= >=表示大于等于和小于等于，用==表示严格等于，用!= 表示不等于，!x表示非x，x|y表示x或y，x&y表示x和y，isTRUE(x)表示测试x是否为真

3.变量重赋值
语句variable[condition] <- expression 表示在条件为真时将变量重新赋值为expression
例如可以将leadership中的99岁标为缺失值，然后对年龄进行分组
leadership$age[leadership$age == 99] <- NA
leadership$age[leadership$age >75] <-"elder"
leadership$age[leadership$age >=55 & leadership$age <=75] <-"middle"
leadership$age[leadership$age <55] <-"young"
如果不把99首先改为缺失值，99会被归类为elder
还可以写的更紧凑，考虑下面这段代码
leadership <- within(leadership, {
  agecat <-NA
  agecat[age>75] <-"elder"
  agecat[age<=75 & age>=55] <-"middle"
  agecat[age<55] <- "young"
  }
)
within函数和with函数类似，但within函数允许修改数据框。首先创建一个只有缺失值的变量agecat，然后依次执行赋值语句
到这里agecat还只是字符型变量，后面转换为有序因子
R中自带了cut函数，可以将数值型变量按值域切分为多个区间，并返回一个因子

4.修改变量名
使用fix()函数调用一个编辑器，单击变量名，在弹出的对话框中重命名
使用names函数可以看到列名，还可以修改列名
names(leadership)可以看到leadership的列名，例如第二个是年龄，有
names(leadership)[2] <- "ageeee"  就将age改名了

5.缺失值
用is.na()函数检查数据是否是缺失值
例如对变量data=c(1,2,3,4,5,na)进行检查，会返回FFFFFT，它会直接返回一个相同大小的对象，如果有值就是F，如果缺失就是T
缺失值无法比较，这意味着无法用逻辑运算中的比较运算符检测缺失值是否存在，只能使用一些处理缺失值的函数处理
无限和不可能存在的数据，在R中不会被标为缺失值，例如正负无穷会以±Inf标记
对某些数据在进行处理之前将其重赋值为NA是有好处的，例如前面的99，很特殊，如果不标为缺失值，会影响分析
如果一个数据有缺失值，那么与他相关的运算也会变成缺失值，意思是我们必须对缺失的数据进行剔除。大部分函数都有na.rm=T的选项，保证在计算时自动跳过NA值
因此在处理不完整的数据时，最好多关注函数是否能够处理缺失值。
删除数据的影响不大时，应当删除缺失的数据，用na.omit()函数可以移除所有含缺失值的行
直接删除缺失值并不是一个好做法，在18章中会有更多的处理方法

6.日期值
日期之所以重要是因为包含了时间信息，日期总是以字符串的形式输入到R中，然后以数值模式储存
函数as.Date()可以完成转化，其中
%d 日期， %a 缩写星期 %A 非缩写星期 %m 月份数字 %b 缩写月份 %B 非缩写月份 %y 两位数年份 %Y 四位数年份
该函数的默认格式为yyyy-mm-dd，也可以自己写成其他格式例如
as.Date(“01/01/2001”，“%m/%d/%Y”)
Sys.Date()用于返回当天的日期，date()返回当前的日期和时间
使用format(x, format="%A")可以接受一个参数并按某种格式输出结果，例如用来输出指定格式的日期值
R还可以对日期进行运算
day1 <- as.Date("2015-02-13")
day2 <- as.Date("2016-03-21")
day <- day2-day1  就计算出了两个日期之间的天数差额
还可以用difftime()计算各种间隔，例如计算年龄
today <- Sys.Date()
birth <- as.Date("1998-09-12")
difftime(today, birth, units="weeks") 就可以算出两个日期之间的周数差
使用as.character()可以将日期转变为字符变量，进而可以取子集、替换、连接等
timedate包提供了更多历法、时区等等
