# R
code about R learning

1.获取帮助
help.start()  打开帮助文档首页
help("foo")  查看函数foo的帮助，引号可省略
example("foo")  函数foo的使用示例

2.工作路径
getwd()  #查看当前工作路径
setwd()  #设定工作路径，不会创建新的路径
dir.create()  #创建一个新目录，然后可以再用setwd指向新目录
lord("myfile")  #读取一个位置的工作空间到当前会话
在独立目录中保存独立项目是好主意，下次打开R可以用setwd指向这个独立目录，后接不加参数的load(".RData")命令即可从上次的地方继续开始
rm()  #移除工作空间中的对象
history(#)  #显示最近使用的#个命令，默认25
save(objectlist, file="myfile")  #保存指定对象到一个指定文件中
save.image("myfile")  #保存工作空间到指定位置

3.输入与输出
source("filename")  #读取指定文件的脚本
sink("filename", append=T, split=T)  #将文本的输出路径重定向到指定文件中，如果已经存在，则将被覆盖，append=T可以将文本追加而不是覆盖，split可以将输出同时发送到屏幕和输出文件中。如果没有参数，sink将仅向屏幕返回结果
jpeg/pdf/png("filename.jpeg/pdf/png")  #sink不影响图形的输出，重定向输出只要用这些函数，最后使用dev.off()返回终端
下面是一个例子
sink("myoutput", append=T, split=T)
pdf("mygraphs.pdf")
source("script.R")
#运行脚本，结果显示在屏幕上，文本输出追加到myoutput中，图形输出保存到mygraphs中
如果要将结果重用，只需要将结果赋值给一个变量即可，后面直接用这个变量

4.包
.libPaths()  #显示库所在的位置
library()  #调用库中的包，每次都要载入一次，如果需要可以在自定义启动环境中设定自动载入频繁使用的包
install.packages()  #安装包，只需要安装一次
update.packages()  #更新包
